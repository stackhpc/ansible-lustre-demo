- hosts: all
  tags:
    - always
    - setup
  become: no
  gather_facts: yes
  tasks:
    - name: Set fact for interface information
      set_fact:
        interface_info: "{{ ansible_interfaces | map('extract', ansible_facts) }}"
    - name: Set fact mapping IP addresses to interfaces
      set_fact:
        ip_to_interface: "{{ dict(interface_info | map(attribute='ipv' + ( ip_version | string ) + '.address') | zip( interface_info | map(attribute='device') )) }}"
      vars:
        ip_version: 4
    # - debug:
    #     msg: "{{ lustre_nodemaps }}"
    # - meta: end_here
        
- hosts: server
  tags: server
  become: yes
  tasks:
    - name: Disable SELinux
      ansible.posix.selinux:
        state: disabled
      register: selinux
    
    - name: Install latest kernel packages
      yum:
        name: "{{ kernel_pkgs }}"
        state: latest
      vars:
        kernel_pkgs:
          - kernel
          - kernel-devel
          - kernel-headers
          - kernel-tools
          - kernel-tools-libs
          - kernel-tools-libs-devel
      register: kernel_install
      
    - name: Reboot
      reboot:
      when: kernel_install.changed | default('false') or selinux.reboot_required
    
    - name: Update facts after (possible) reboot
      setup:

    - name: Create MGT device
      import_role:
        name: ansible-role-loopdev
      vars:
        loopdev_path: /var/mgt0
        loopdev_size: 1GB
        loopdev_fstype: ''
    - set_fact:
        loopdev_mgt: "{{ loopdev.dev }}"
    - debug:
        var:  loopdev_mgt
      
    - name: Create MDT device
      import_role:
        name: ansible-role-loopdev
      vars:
        loopdev_path: /var/mdt0
        loopdev_size: 5GB
        loopdev_fstype: ''
    - set_fact:
        loopdev_mdt: "{{ loopdev.dev }}"
    - debug:
        var:  loopdev_mdt
    
    - name: Create OST device
      import_role:
        name: ansible-role-loopdev
      vars:
        loopdev_path: /var/ost0
        loopdev_size: 100GB
        loopdev_fstype: ''
    - set_fact:
        loopdev_ost0: "{{ loopdev.dev }}"
    - debug:
        var:  loopdev_ost0

    - name: Install lustre server
      import_role:
        name: ansible-role-lustre
    
    - name: List NIDs
      tags: checks
      command:
        cmd: lctl list_nids
      register: _lctl_nids
      failed_when: (_lctl_nids.rc != 0) or ('@' not in _lctl_nids.stdout)
      changed_when: false

    - name: List lustre devices
      tags: checks
      command:
        cmd: lctl dl
      register: _lctl_dl
      changed_when: false
    
    - name: Assert server components running
      tags: checks
      assert:
        that: item in _lctl_dl.stdout
        fail_msg: "Did not find '{{ item }}' in lctl dl output"
      loop:
        - UP mgs
        - UP mgc
        - UP mds
        - UP mdt
        - UP ost

- hosts: clients
  tags: clients
  become: yes
  tasks:
    - name: Gather facts from MGS
      setup:
      delegate_to: "{{ groups['server'] | first }}"
      delegate_facts: True
    
    - name: Install lustre client
      import_role:
        name: ansible-role-lustre
    
    - name: Ensure mount point exists
      file:
        path: "/mnt/{{ lustre_fsname }}"
        state: directory
        # TODO owner, mode

    - name: Mount lustre fileysystem
      tags: mount
      mount:
        src: "{{ lustre_mount_src }}"
        path: /mnt/lustre
        fstype: lustre
        state: "{{ client_mount_state | default('mounted') }}"
